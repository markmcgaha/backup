#
# /etc/backup.conf
# Configuration file for backup
# This file is sourced by a bash script
#

#
# How many copies to maintain for each checkpoint type
#
INSTANT=8
DAILY=5
WEEKLY=4
MONTHLY=12
YEARLY=2

#
# Where to mount/write the backups
#
COMMENT='Friendly Drive Name'
DEVICE='/dev/disk/by-uuid/00000000-0000-0000-0000-000000000001'
MOUNT='/var/local/backup/00000000-0000-0000-0000-000000000001'

##
## Use Something like the section below to manage multiple
## backup devices
##
#UUID1='00000000-0000-0000-0000-000000000001'
#UUID2='00000000-0000-0000-0000-000000000002'
#UUID3='00000000-0000-0000-0000-000000000003'
#if [ -h "/dev/disk/by-uuid/${UUID1}" ]; then
#    COMMENT='Friendly Name Drive 1'
#    DEVICE="/dev/disk/by-uuid/${UUID1}"
#    MOUNT="/var/local/backup/${UUID1}"
#elif [ -h "/dev/disk/by-uuid/${UUID2}" ]; then
#    COMMENT='Friendly Name Drive 2'
#    DEVICE="/dev/disk/by-uuid/${UUID2}"
#    MOUNT="/var/local/backup/${UUID2}"
#else
#    COMMENT='Friendly Name Drive 3'
#    DEVICE="/dev/disk/by-uuid/${UUID3}"
#    MOUNT="/var/local/backup/${UUID3}"
#fi


HEAD="${MOUNT}/`hostname`/head"

#
# Remember, you probably do not want to use a trailing slash on the
# rsync source path. Read the rsync documentation to understand why.
#
RSYNC=(
    "rsync -aR --delete --numeric-ids --hard-links /etc ${HEAD}"
    "rsync -aR --delete --numeric-ids --hard-links /usr/local ${HEAD}"
    "rsync -aR --delete --numeric-ids --hard-links /var/spool/cron ${HEAD}"
    "rsync -aR --delete --numeric-ids --hard-links /root ${HEAD}"
    "rsync -aR --delete --numeric-ids --hard-links --delete-excluded --exclude=.cache /home ${HEAD}"
)

#
# The backup script will create a default dry run command from the
# RSYNC command, but it is probably not what you want.
#
DIFF=(
    "rsync -aRnv --delete --numeric-ids /etc ${HEAD}"
    "rsync -aRnv --delete --numeric-ids /usr/local ${HEAD}"
    "rsync -aRnv --delete --numeric-ids /var/spool/cron ${HEAD}"
    "rsync -aRnv --delete --numeric-ids /root ${HEAD}"
    "rsync -aRnv --delete --numeric-ids --delete-excluded --exclude=.cache /home ${HEAD}"
)
